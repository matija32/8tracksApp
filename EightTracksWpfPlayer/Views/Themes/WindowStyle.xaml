<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Class="EightTracksWpfPlayer.Views.Themes.WindowCustomBorderStyle">

	<ResourceDictionary.MergedDictionaries></ResourceDictionary.MergedDictionaries>

	<!-- Constantes -->
	<CornerRadius x:Key="WindowCorderRadius">10,10,5,5</CornerRadius>
	<CornerRadius x:Key="TitleCorderRadius">10,10,0,0</CornerRadius>

	<!-- Base title button style -->
	<Style x:Key="TitleBarRadialButton" TargetType="Button">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="MinHeight" Value="13" />
		<Setter Property="MinWidth" Value="13" />
		<Setter Property="Opacity" Value="0.9" />
	</Style>

	<!-- Close Button -->
	<Style x:Key="CloseRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonRoot">
						<Grid.Effect>
							<DropShadowEffect ShadowDepth="0" Color="Red" BlurRadius="0" />
						</Grid.Effect>

						<Image x:Name="Image" Source="Images\normal close.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="14" Height="14">
						</Image>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Image" Property="Source" Value="Images\highlighted close.png" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
						</Trigger>

						<EventTrigger RoutedEvent="MouseEnter">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" To="15" Duration="0:0:0.3" />

									<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>

						<EventTrigger RoutedEvent="MouseLeave">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" To="0" Duration="0:0:0.2" />

									<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.9" Duration="0:0:0.5" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Minimize Button -->
	<Style x:Key="MinimizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Image x:Name="Image" Source="Images\normal minimize.bmp" HorizontalAlignment="Center" VerticalAlignment="Center" Width="14" Height="14" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Image" Property="Source" Value="Images\highlighted minimize.bmp" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Maximize Button -->
	<Style x:Key="MaximizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Image x:Name="Image" Source="Images\normal maximize.bmp" HorizontalAlignment="Center" VerticalAlignment="Center" Width="14" Height="14" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Image" Property="Source" Value="Images\highlighted maximize.bmp" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Border defining the frame of the Window -->
	<Style x:Key="WindowBorder" TargetType="Border">
		<Setter Property="CornerRadius" Value="{StaticResource WindowCorderRadius}" />
		<Setter Property="Background" Value="#ABABAB" />
		<Setter Property="BorderBrush" Value="DimGray" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />

		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
				<Setter Property="CornerRadius" Value="0" />
			</DataTrigger>
		</Style.Triggers>

	</Style>

	<Style x:Key="TitleBarBackgroundBorder" TargetType="Border">
		<Setter Property="Height" Value="24" />
		<Setter Property="CornerRadius" Value="{StaticResource TitleCorderRadius}" />
		<Setter Property="Background" Value="{DynamicResource TitleBarBackgroundBrush}" />

		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
				<Setter Property="CornerRadius" Value="0" />
			</DataTrigger>
		</Style.Triggers>

	</Style>

	<Style x:Key="WindowRoot" TargetType="Grid">
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
				<Setter Property="Margin" Value="{DynamicResource WindowRootMargin}" />
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="RectBorderStyle" TargetType="Rectangle">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Fill" Value="Transparent" />
	</Style>

	<!-- Window Template -->
	<ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
		<ControlTemplate.Resources>
			<GridLength x:Key="BorderWidth">7</GridLength>
		</ControlTemplate.Resources>

		<Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}" SizeChanged="OnWindowSizeChanged" Loaded="OnWindowLoaded">
			<Border x:Name="WindowFrame" Style="{DynamicResource WindowBorder}">
				<Grid x:Name="WindowLayout">

					<!-- The title bar. -->
					<Grid Margin="0" VerticalAlignment="Top">
						<Border Style="{DynamicResource TitleBarBackgroundBorder}" MouseLeftButtonDown="MoveWindow" MouseMove="OnBorderMouseMove" />
						<StackPanel Orientation="Horizontal">

							<Image x:Name="IconApp" Source="{TemplateBinding Icon}" HorizontalAlignment="Left" VerticalAlignment="Top">
								<Image.RenderTransform>
									<ScaleTransform CenterX="0" CenterY="6" ScaleX="0.7" ScaleY="0.7" />
								</Image.RenderTransform>
							</Image>

							<TextBlock Foreground="{DynamicResource TextBrush}" Text="{TemplateBinding Title}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="SemiBold" MouseLeftButtonDown="MoveWindow" />
						</StackPanel>
						<!-- Window state buttons -->
						<StackPanel Margin="0,0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                            
							<!-- hide the skin changing for now -->
							<ComboBox Margin="0,0,5,0" Height="16" FontSize="8" Padding="3" SelectionChanged="OnThemeSelectionChanged" SelectedIndex="{Binding Path=Settings[SelectedTheme], Mode=TwoWay, TargetNullValue=3, FallbackValue=3}" Visibility="Hidden">
								<!-- Load themes dynamically from Themes\Skins -->
								<ComboBoxItem Tag="None">None</ComboBoxItem>
								<ComboBoxItem Tag="BureauBlack">Bureau Black</ComboBoxItem>
								<ComboBoxItem Tag="BureauBlue">Bureau Blue</ComboBoxItem>
								<ComboBoxItem Tag="ExpressionDark">Expression Dark</ComboBoxItem>
								<ComboBoxItem Tag="ExpressionLight">Expression Light</ComboBoxItem>
								<ComboBoxItem Tag="ShinyBlue">Shiny Blue</ComboBoxItem>
								<ComboBoxItem Tag="ShinyRed">Skiny Red</ComboBoxItem>
								<ComboBoxItem Tag="WhistlerBlue">Whistler Blue</ComboBoxItem>
							</ComboBox>
							<Button Style="{StaticResource MinimizeRadialButton}" Click="MinimizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0" />
							<Button Style="{StaticResource MaximizeRadialButton}" Click="MaximizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0" />
							<Button Style="{StaticResource CloseRadialButton}" Click="CloseWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" />
						</StackPanel>
					</Grid>

					<!-- The window content. -->
					<Border x:Name="WindowContent" Margin="0,24,0,0">
						<AdornerDecorator>
							<ContentPresenter />
						</AdornerDecorator>
					</Border>

					<!-- Grips -->
					<!-- Sides -->
					<Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Left" />
					<Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Right" />
					<Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Top" />
					<Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Bottom" />
					<!--Corners -->
					<Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Top" />
					<Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
					<Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top" />
					<Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
				</Grid>
			</Border>
		</Grid>
	</ControlTemplate>

	<!-- Window Style -->

	<!-- ISSUE WITH XP : http://connect.microsoft.com/VisualStudio/feedback/details/369500/problem-with-the-allowtransparency-and-popup-controls-in-wpf -->
	<!-- Hotfix : http://support.microsoft.com/kb/943326 -->
	<Style x:Key="SkinWindowStyle" TargetType="Window">
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="AllowsTransparency" Value="True" />
		<Setter Property="ResizeMode" Value="CanResizeWithGrip" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="MinHeight" Value="150" />
		<Setter Property="MinWidth" Value="250" />
		<Setter Property="Opacity" Value="1.0" />
		<Setter Property="Template" Value="{StaticResource WindowTemplate}" />

		<Style.Triggers>
			<DataTrigger Binding="{Binding WindowState}" Value="Maximized"></DataTrigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>